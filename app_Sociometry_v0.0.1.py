# -*- coding: utf-8 -*-
import os

# Form implementation generated from reading ui file 'footerMenu.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_footerMenu(object):
    def __init__(self):
        self.exel_file = None
        self.pptx_file = None
        self.pptx_file = None

    def setupUi(self, footerMenu):
        footerMenu.setObjectName("footerMenu")
        footerMenu.resize(500, 400)
        font = QtGui.QFont()
        font.setFamily("Noto Sans Lisu")
        font.setPointSize(25)
        footerMenu.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../icons/label5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        footerMenu.setWindowIcon(icon)
        self.footerMenu_central = QtWidgets.QWidget(footerMenu)
        self.footerMenu_central.setStyleSheet("background-color: rgb(245, 253, 229);")
        self.footerMenu_central.setObjectName("footerMenu_central")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.footerMenu_central)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.footerMenu_content = QtWidgets.QFrame(self.footerMenu_central)
        self.footerMenu_content.setStyleSheet("background-color: rgb(245, 253, 229);")
        self.footerMenu_content.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.footerMenu_content.setFrameShadow(QtWidgets.QFrame.Plain)
        self.footerMenu_content.setLineWidth(0)
        self.footerMenu_content.setObjectName("footerMenu_content")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.footerMenu_content)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, -1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.footer = QtWidgets.QFrame(self.footerMenu_content)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.footer.sizePolicy().hasHeightForWidth())
        self.footer.setSizePolicy(sizePolicy)
        self.footer.setMaximumSize(QtCore.QSize(16777215, 50))
        self.footer.setStyleSheet("")
        self.footer.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.footer.setFrameShadow(QtWidgets.QFrame.Raised)
        self.footer.setLineWidth(0)
        self.footer.setObjectName("footer")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.footer)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.fName = QtWidgets.QFrame(self.footer)
        self.fName.setMinimumSize(QtCore.QSize(0, 0))
        self.fName.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.fName.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.fName.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fName.setLineWidth(0)
        self.fName.setObjectName("fName")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.fName)
        self.horizontalLayout_7.setContentsMargins(0, 5, 0, 0)
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.fText = QtWidgets.QFrame(self.fName)
        self.fText.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.fText.setFrameShadow(QtWidgets.QFrame.Raised)
        self.fText.setLineWidth(0)
        self.fText.setObjectName("fText")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.fText)
        self.horizontalLayout_9.setContentsMargins(20, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.Socimetry = QtWidgets.QLabel(self.fText)
        self.Socimetry.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("Noto Sans Lisu")
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.Socimetry.setFont(font)
        self.Socimetry.setScaledContents(True)
        self.Socimetry.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.Socimetry.setObjectName("Socimetry")
        self.horizontalLayout_9.addWidget(self.Socimetry)
        self.horizontalLayout_7.addWidget(self.fText)
        self.horizontalLayout_7.setStretch(0, 70)
        self.horizontalLayout.addWidget(self.fName)
        self.horizontalLayout.setStretch(0, 50)
        self.verticalLayout_3.addWidget(self.footer)
        self.MenuBase = QtWidgets.QFrame(self.footerMenu_content)
        self.MenuBase.setStyleSheet("QPushButton:hover\n"
                                    "{\n"
                                    "    background-color: rgb(153, 193, 241);\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton\n"
                                    "{ \n"
                                    "    background-color: rgb(193, 227, 166);\n"
                                    "    border-radius: 10px;\n"
                                    "font-size: 18px;"
                                    "color: rgb(6, 36, 20);"
                                    "}\n"
                                    "")
        self.MenuBase.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.MenuBase.setFrameShadow(QtWidgets.QFrame.Plain)
        self.MenuBase.setObjectName("MenuBase")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.MenuBase)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.Developers = QtWidgets.QLabel(self.MenuBase)
        self.Developers.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Developers.setObjectName("Developers")
        self.Developers.setContentsMargins(10, 0, 0, 0)
        self.Developers.setStyleSheet("color: rgb(74, 94, 83);")
        self.verticalLayout_5.addWidget(self.Developers)
        self.DescryptorsFrame = QtWidgets.QFrame(self.MenuBase)
        self.DescryptorsFrame.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.DescryptorsFrame.setStyleSheet("")
        self.DescryptorsFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.DescryptorsFrame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.DescryptorsFrame.setLineWidth(1)
        self.DescryptorsFrame.setMidLineWidth(0)
        self.DescryptorsFrame.setObjectName("DescryptorsFrame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.DescryptorsFrame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.PathForTableExcel = QtWidgets.QLabel(self.DescryptorsFrame)
        self.PathForTableExcel.setMaximumSize(QtCore.QSize(16777215, 30))
        self.PathForTableExcel.setObjectName("PathForTableExcel")
        self.verticalLayout_2.addWidget(self.PathForTableExcel)
        self.SelectTableExcel = QtWidgets.QPushButton(self.DescryptorsFrame)
        self.SelectTableExcel.setMinimumSize(QtCore.QSize(0, 60))
        self.SelectTableExcel.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectTableExcel.setStyleSheet("")
        self.SelectTableExcel.setObjectName("SelectTableExcel")
        self.verticalLayout_2.addWidget(self.SelectTableExcel)
        self.SelectPresentationForInsert = QtWidgets.QLabel(self.DescryptorsFrame)
        self.SelectPresentationForInsert.setMaximumSize(QtCore.QSize(16777215, 30))
        self.SelectPresentationForInsert.setObjectName("SelectPresentationForInsert")
        self.verticalLayout_2.addWidget(self.SelectPresentationForInsert)
        self.SelectPresentation = QtWidgets.QPushButton(self.DescryptorsFrame)
        self.SelectPresentation.setMinimumSize(QtCore.QSize(0, 60))
        self.SelectPresentation.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.SelectPresentation.setStyleSheet("")
        self.SelectPresentation.setObjectName("SelectPresentation")
        self.verticalLayout_2.addWidget(self.SelectPresentation)
        self.ExportPresentation = QtWidgets.QPushButton(self.DescryptorsFrame)
        self.ExportPresentation.setMinimumSize(QtCore.QSize(0, 60))
        self.ExportPresentation.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.ExportPresentation.setStyleSheet("QPushButton:hover\n"
                                    "{\n"
                                    "    background-color: rgb(153, 193, 241);\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton\n"
                                    "{ \n"
                                    "    background-color: rgb(173, 197, 173);\n"
                                    "    border-radius: 10px;\n"
                                    "}\n"
                                    "")
        self.ExportPresentation.setObjectName("ExportPresentation")
        self.verticalLayout_2.addWidget(self.ExportPresentation)
        self.verticalLayout_5.addWidget(self.DescryptorsFrame)
        self.verticalLayout_3.addWidget(self.MenuBase)
        self.verticalLayout.addWidget(self.footerMenu_content)
        footerMenu.setCentralWidget(self.footerMenu_central)


        self.retranslateUi(footerMenu)
        QtCore.QMetaObject.connectSlotsByName(footerMenu)

        self.select_button()

    def retranslateUi(self, footerMenu):
        _translate = QtCore.QCoreApplication.translate
        footerMenu.setWindowTitle(_translate("footerMenu", "Cryptography"))
        self.Socimetry.setText(_translate("footerMenu", "Sociometry"))
        self.Developers.setText(_translate("footerMenu", "Dev: Semenova, Pihurov, Frolkin"))

        self.PathForTableExcel.setText(_translate("footerMenu", "EXCEL TABLE FILE"))
        self.SelectTableExcel.setText(_translate("footerMenu", "Select exel table"))
        self.SelectPresentation.setText(_translate("footerMenu", "Select path for presentation"))
        self.SelectPresentationForInsert.setText(_translate("footerMenu", "PATH FOR PRESENTATION"))
        self.ExportPresentation.setText(_translate("footerMenu", "Get Result!"))

    # ВЫШЕ НЕ ТРОГАТЬ!!!, ниже можете добавлять различные классы, поля, функции и тд, главное добавьте ивенты в select_button @nick-vivo

    def select_button(self):
        self.SelectTableExcel.clicked.connect(self.select_excel)

        self.SelectPresentation.clicked.connect(self.select_presentation)

        self.ExportPresentation.clicked.connect(self.export_output)

    def select_excel(self):
        _translate = QtCore.QCoreApplication.translate

        now_directory = os.getcwd()
        self.exel_file, _ = QtWidgets.QFileDialog.getOpenFileName(self.footer, "Выберете exel файл",
                                                                  directory=now_directory, filter="exel файлы (*.xlsx)")
        self.PathForTableExcel.setText(_translate("footerMenu", f"EXCEL TABLE FILE : {self.exel_file}"))

    def select_presentation(self):
        _translate = QtCore.QCoreApplication.translate

        self.pptx_file, _ = QtWidgets.QFileDialog.getSaveFileName(self.footer, "Выберете папку для презентации", ".",
                                                                  "PowerPoint Files (*.pptx)")
        self.SelectPresentationForInsert.setText(_translate("footerMenu", f"PATH FOR PRESENTATION : {self.pptx_file}"))

    def export_output(self):
        try:
            slides_for_stats = {'Статистика1': {'C_plus': 6, 'E_plus': 8, 'КУО': 10, 'group': 14},
                                'Статистика2': {'C_plus': 18, 'E_plus': 19, 'КУО': 20, 'group': 21},
                                'Статистика3': {'C_plus': 25, 'E_plus': 26, 'КУО': 27, 'group': 28},
                                'Статистика4': {'C_plus': 32, 'E_plus': 33, 'КУО': 34, 'group': 35},
                                'Статистика5': {'C_plus': 39, 'E_plus': 40, 'КУО': 41, 'group': 42},
                                'Статистика6': {'C_plus': 46, 'E_plus': 47, 'КУО': 48, 'group': 49}}
            slides_for_graphs = {'Статистика1': [15, 16],
                                 'Статистика2': [22, 23],
                                 'Статистика3': [29, 30],
                                 'Статистика4': [36, 37],
                                 'Статистика5': [43, 44],
                                 'Статистика6': [50, 51]}
            all_groups_slide = 52
            relevance_table_slide = 54
            rating_data_slide = 53

            prs = ser_pptx.Present(self.pptx_file, f"./resource/pptx files/template.pptx")

            prs.save_titul_slide("какой-то группы")
            last_table_df = pd.DataFrame(columns=['п/п', 'S_group', 'E_group', 'BB_group'])
            relevance_types = {1: 'Д/р',
                               2: 'Совет',
                               3: 'Командировка',
                               4: 'Д/з',
                               5: 'Инженер',
                               6: 'IT'}
            relevance_table = pd.DataFrame(columns=['п/п', 'Вид общения', 'S_group'])
            i = 1
            for key in slides_for_stats.keys():
                data = get_table_data(self.exel_file, key)
                images_paths = save_image_from_excel(self.exel_file, key, 'img')
                data, stats = split_table_into_parts(data)
                for stat_key in data.keys():
                    prs.add_table_to_slide(data[stat_key], slides_for_stats[key][stat_key])
                prs.add_mini_table_to_slide(stats, slides_for_stats[key]['group'])
                stats['п/п'] = i
                last_table_df.loc[len(last_table_df)] = stats
                relevance_table.loc[len(relevance_table)] = {'п/п': i, 'Вид общения': relevance_types[i],
                                                             'S_group': stats['S_group']}
                i += 1
                ind = 0
                for path in images_paths:
                    prs.add_image_to_slide(path, slides_for_graphs[key][ind])
                    ind += 1
            prs.add_last_tables(last_table_df, all_groups_slide)
            relevance_table = relevance_table.sort_values(by=relevance_table.columns[2], ascending=False)
            relevance_table.insert(0, 'Рейтинг', range(1, len(relevance_table) + 1))
            prs.add_last_tables(relevance_table, relevance_table_slide)

            rating_data = pd.DataFrame(columns=['п/п', 'Вид общения', 'Кол-во выборов'])
            for i in range(1, 7):
                data = get_table_data(self.exel_file, f"Лист{i}")
                sum_ = data.iloc[1:, 1:].sum().sum()
                rating_data.loc[len(rating_data)] = {'п/п': i, 'Вид общения': relevance_types[i],
                                                     'Кол-во выборов': sum_}
            rating_data = rating_data.sort_values(by=rating_data.columns[2], ascending=False)
            rating_data.insert(0, 'Рейтинг', range(1, len(rating_data) + 1))
            prs.add_last_tables(rating_data, rating_data_slide)
            prs.save()
            QtWidgets.QMessageBox.information(self.footer,
                                              "Успех", f"Успешно создан файл по пути: {self.pptx_file}")
        except FileNotFoundError as e:
            QtWidgets.QMessageBox.critical(self.footer, f"File not found", f"File {e} not found!!!")
        except Exception as e:
            QtWidgets.QMessageBox.critical(self.footer, f"Error", f"Error {e}")

    # НИЖЕ НЕ ТРОГАТЬ!!! ( ЧТОБЫ ПРИ ОБНОВЛЕНИИ МЕНЮ, НЕ МЕНЯТЬ КОД ВНУТРИ!!!!!!!!!! ) @nick-vivo


if __name__ == "__main__":
    import sys
    import pandas as pd
    from modules.ser.ser_excel import (get_table_data, split_table_into_parts,
                                       save_image_from_excel)
    from modules.ser.ser_pptx import Present
    from modules.ser import ser_json, ser_excel, ser_pptx

    app = QtWidgets.QApplication(sys.argv)
    footerMenu = QtWidgets.QMainWindow()

    ui = Ui_footerMenu()
    ui.setupUi(footerMenu)

    footerMenu.show()
    sys.exit(app.exec_())
